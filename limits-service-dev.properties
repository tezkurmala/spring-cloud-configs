limits-service.minimum=12

#Maximum prop value will be picked from default profile
#limits-service.maximum=1111

# Following is the URL that will be used by limits-service (8080,..)
# to load the configuration from this config-server app (8888)
# if active profile is set to dev like following in limits-service 
# spring.profiles.active=dev
# http://localhost:8888/limits-service/dev

# A POST call to http://localhost:8080/actuator/refresh
# would make sure that the changes to .properties are picked.
# The response of this call to 8080 port limits-service will 
# contain body that describes all the keys of changed properties.
# Hence the limits-service will have visibility to changed values.
####The problem is the refresh is to be done on each instance.
####If limits-service is running on 8080, 8081, 8082, we have to 
####POST to all the 3 refresh URLs individually.
# To overcome the above problem we can POST to http://localhost:8080/actuator/bus-refresh
# that picks the changed config to all instances 8080, 8081, 8082
# This would need following starter both in limits-service and cloud-config-server apps.
#       <groupId>org.springframework.cloud</groupId>
#		<artifactId>spring-cloud-starter-bus-amqp</artifactId>
management.endpoints.web.exposure.include=*